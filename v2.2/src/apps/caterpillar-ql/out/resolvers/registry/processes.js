"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _repo = require("../repo");

var _debug = _interopRequireDefault(require("debug"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = async ({
  web3,
  contract,
  address
}) => {
  const instances = await contract.allInstances();

  if (instances) {
    (0, _debug.default)('caterpillarql:processes')({
      instances
    });
    const bundleFors = await Promise.all(instances.filter(i => !address || i === address).map(instance => contract.bundleFor({
      instance
    }).then(bundleFor => ({
      instance,
      bundleFor
    }))));
    return Promise.all(bundleFors.map(({
      bundleFor,
      instance
    }) => _repo.process.find({
      _id: bundleFor
    }).then(([{
      bpmnModel,
      rootProcessName: name
    }]) => ({
      address: instance,
      id: bundleFor,
      bpmnModel,
      registryContract: contract,
      name
    }))));
  }
};

exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2FwcC9yZXNvbHZlcnMvcmVnaXN0cnkvcHJvY2Vzc2VzLnRzIl0sIm5hbWVzIjpbIndlYjMiLCJjb250cmFjdCIsImFkZHJlc3MiLCJpbnN0YW5jZXMiLCJhbGxJbnN0YW5jZXMiLCJidW5kbGVGb3JzIiwiUHJvbWlzZSIsImFsbCIsImZpbHRlciIsImkiLCJtYXAiLCJpbnN0YW5jZSIsImJ1bmRsZUZvciIsInRoZW4iLCJwcm9jZXNzIiwiZmluZCIsIl9pZCIsImJwbW5Nb2RlbCIsInJvb3RQcm9jZXNzTmFtZSIsIm5hbWUiLCJpZCIsInJlZ2lzdHJ5Q29udHJhY3QiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7OztlQUllLE9BQ2I7QUFDRUEsRUFBQUEsSUFERjtBQUVFQyxFQUFBQSxRQUZGO0FBR0VDLEVBQUFBO0FBSEYsQ0FEYSxLQVNTO0FBQ3RCLFFBQU1DLFNBQVMsR0FBRyxNQUFNRixRQUFRLENBQzdCRyxZQURxQixFQUF4Qjs7QUFFQSxNQUFJRCxTQUFKLEVBQWU7QUFDYix3QkFBTSx5QkFBTixFQUFpQztBQUFFQSxNQUFBQTtBQUFGLEtBQWpDO0FBQ0EsVUFBTUUsVUFBVSxHQUFHLE1BQU1DLE9BQU8sQ0FBQ0MsR0FBUixDQUN2QkosU0FBUyxDQUNOSyxNQURILENBRUlDLENBQUMsSUFBSSxDQUFDUCxPQUFELElBQVlPLENBQUMsS0FBS1AsT0FGM0IsRUFJR1EsR0FKSCxDQUtLQyxRQUFELElBQ0VWLFFBQVEsQ0FDTFcsU0FESCxDQUNhO0FBQUVELE1BQUFBO0FBQUYsS0FEYixFQUVHRSxJQUZILENBR0tELFNBQUQsS0FBd0I7QUFDdEJELE1BQUFBLFFBRHNCO0FBRXRCQyxNQUFBQTtBQUZzQixLQUF4QixDQUhKLENBTk4sQ0FEdUIsQ0FBekI7QUFpQkEsV0FBT04sT0FBTyxDQUFDQyxHQUFSLENBQ0xGLFVBQVUsQ0FDUEssR0FESCxDQUVJLENBQUM7QUFDQ0UsTUFBQUEsU0FERDtBQUVDRCxNQUFBQTtBQUZELEtBQUQsS0FHdUJHLGNBQ3BCQyxJQURvQixDQUNmO0FBQUVDLE1BQUFBLEdBQUcsRUFBRUo7QUFBUCxLQURlLEVBRXBCQyxJQUZvQixDQUduQixDQUFDLENBQUM7QUFDQUksTUFBQUEsU0FEQTtBQUVBQyxNQUFBQSxlQUFlLEVBQUVDO0FBRmpCLEtBQUQsQ0FBRCxNQUdnQjtBQUNkakIsTUFBQUEsT0FBTyxFQUFFUyxRQURLO0FBRWRTLE1BQUFBLEVBQUUsRUFBRVIsU0FGVTtBQUdkSyxNQUFBQSxTQUhjO0FBSWRJLE1BQUFBLGdCQUFnQixFQUFFcEIsUUFKSjtBQUtka0IsTUFBQUE7QUFMYyxLQUhoQixDQUhtQixDQUwzQixDQURLLENBQVA7QUFzQkQ7QUFDRixDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcHJvY2VzcyB9IGZyb20gJy4uL3JlcG8nXG5pbXBvcnQgZGVidWcgZnJvbSAnZGVidWcnXG5pbXBvcnQgaGV4VG9JZCBmcm9tICcuLi91dGlsL2hleC10by1pZCdcbmltcG9ydCBXZWIzIGZyb20gJ3dlYjMnXG5cbmV4cG9ydCBkZWZhdWx0IGFzeW5jIChcbiAge1xuICAgIHdlYjMsXG4gICAgY29udHJhY3QsXG4gICAgYWRkcmVzc1xuICB9IDoge1xuICAgIHdlYjM6IFdlYjMsXG4gICAgY29udHJhY3Q6IGltcG9ydCgnY2F0ZXJwaWxsYXItbGliJykuUmVnaXN0cnlDb250cmFjdCxcbiAgICBhZGRyZXNzOiBzdHJpbmdcbiAgfSk6IFByb21pc2U8YW55W10+ID0+IHtcbiAgY29uc3QgaW5zdGFuY2VzID0gYXdhaXQgY29udHJhY3RcbiAgICAuYWxsSW5zdGFuY2VzKClcbiAgaWYgKGluc3RhbmNlcykge1xuICAgIGRlYnVnKCdjYXRlcnBpbGxhcnFsOnByb2Nlc3NlcycpKHsgaW5zdGFuY2VzIH0pXG4gICAgY29uc3QgYnVuZGxlRm9ycyA9IGF3YWl0IFByb21pc2UuYWxsKFxuICAgICAgaW5zdGFuY2VzXG4gICAgICAgIC5maWx0ZXIoXG4gICAgICAgICAgaSA9PiAhYWRkcmVzcyB8fCBpID09PSBhZGRyZXNzXG4gICAgICAgIClcbiAgICAgICAgLm1hcChcbiAgICAgICAgICAoaW5zdGFuY2UpOiBQcm9taXNlPG9iamVjdD4gPT5cbiAgICAgICAgICAgIGNvbnRyYWN0XG4gICAgICAgICAgICAgIC5idW5kbGVGb3IoeyBpbnN0YW5jZSB9KVxuICAgICAgICAgICAgICAudGhlbihcbiAgICAgICAgICAgICAgICAoYnVuZGxlRm9yKTogb2JqZWN0ID0+ICh7XG4gICAgICAgICAgICAgICAgICBpbnN0YW5jZSxcbiAgICAgICAgICAgICAgICAgIGJ1bmRsZUZvcixcbiAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgKSxcbiAgICAgICAgKVxuICAgIClcbiAgICByZXR1cm4gUHJvbWlzZS5hbGwoXG4gICAgICBidW5kbGVGb3JzXG4gICAgICAgIC5tYXAoXG4gICAgICAgICAgKHtcbiAgICAgICAgICAgIGJ1bmRsZUZvcixcbiAgICAgICAgICAgIGluc3RhbmNlLFxuICAgICAgICAgIH0pOiBQcm9taXNlPG9iamVjdD4gPT4gcHJvY2Vzc1xuICAgICAgICAgICAgLmZpbmQoeyBfaWQ6IGJ1bmRsZUZvcn0pXG4gICAgICAgICAgICAudGhlbihcbiAgICAgICAgICAgICAgKFt7XG4gICAgICAgICAgICAgICAgYnBtbk1vZGVsLFxuICAgICAgICAgICAgICAgIHJvb3RQcm9jZXNzTmFtZTogbmFtZSxcbiAgICAgICAgICAgICAgfV0pOiBvYmplY3QgPT4gKHtcbiAgICAgICAgICAgICAgICBhZGRyZXNzOiBpbnN0YW5jZSxcbiAgICAgICAgICAgICAgICBpZDogYnVuZGxlRm9yLFxuICAgICAgICAgICAgICAgIGJwbW5Nb2RlbCxcbiAgICAgICAgICAgICAgICByZWdpc3RyeUNvbnRyYWN0OiBjb250cmFjdCxcbiAgICAgICAgICAgICAgICBuYW1lLFxuICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgKVxuICAgICAgICApXG4gICAgKVxuICB9XG59XG4iXX0=