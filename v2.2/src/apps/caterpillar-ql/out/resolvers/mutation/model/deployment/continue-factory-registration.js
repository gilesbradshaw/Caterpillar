"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _debug2 = _interopRequireDefault(require("debug"));

var _createWorklistInstances = _interopRequireDefault(require("./create-worklist-instances"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const debug = (0, _debug2.default)('caterpillarql:model:continue-factory-registration');

const continueFactoryRegistration = (web3, registryContract, currentIndex, sortedElements, outputContracts, contractF, modelInfo, registerFactory) => {
  return web3.eth.personal.getAccounts().then(accounts => registryContract.registerFactory({
    bundleId: web3.utils.fromAscii(sortedElements[currentIndex].bundleId),
    address: contractF.address
  })({
    from: accounts[0],
    gas: 4700000
  }).then(result1 => {
    debug(`${sortedElements[currentIndex].nodeName}_Factory registered SUCCESSFULLY in Process Registry`);
    debug('....................................................................');

    if (currentIndex + 1 < sortedElements.length) {
      return registerFactory(web3, registryContract, currentIndex + 1, sortedElements, outputContracts, modelInfo);
    } else {
      debug('....................................................................');
      debug('DEPLOYONG worklist CONTRACTS AND UPDATING PROCESS REGISTRY ...');
      return (0, _createWorklistInstances.default)(web3, registryContract, 0, sortedElements, outputContracts, modelInfo);
    }
  }));
};

var _default = continueFactoryRegistration;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL2FwcC9yZXNvbHZlcnMvbXV0YXRpb24vbW9kZWwvZGVwbG95bWVudC9jb250aW51ZS1mYWN0b3J5LXJlZ2lzdHJhdGlvbi50cyJdLCJuYW1lcyI6WyJkZWJ1ZyIsImNvbnRpbnVlRmFjdG9yeVJlZ2lzdHJhdGlvbiIsIndlYjMiLCJyZWdpc3RyeUNvbnRyYWN0IiwiY3VycmVudEluZGV4Iiwic29ydGVkRWxlbWVudHMiLCJvdXRwdXRDb250cmFjdHMiLCJjb250cmFjdEYiLCJtb2RlbEluZm8iLCJyZWdpc3RlckZhY3RvcnkiLCJldGgiLCJwZXJzb25hbCIsImdldEFjY291bnRzIiwidGhlbiIsImFjY291bnRzIiwiYnVuZGxlSWQiLCJ1dGlscyIsImZyb21Bc2NpaSIsImFkZHJlc3MiLCJmcm9tIiwiZ2FzIiwicmVzdWx0MSIsIm5vZGVOYW1lIiwibGVuZ3RoIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7Ozs7QUFFQSxNQUFNQSxLQUFLLEdBQUcscUJBQU8sbURBQVAsQ0FBZDs7QUFFQSxNQUFNQywyQkFBMkIsR0FBRyxDQUNsQ0MsSUFEa0MsRUFFbENDLGdCQUZrQyxFQUdsQ0MsWUFIa0MsRUFJbENDLGNBSmtDLEVBS2xDQyxlQUxrQyxFQU1sQ0MsU0FOa0MsRUFPbENDLFNBUGtDLEVBUWxDQyxlQVJrQyxLQVMvQjtBQUNILFNBQU9QLElBQUksQ0FBQ1EsR0FBTCxDQUFTQyxRQUFULENBQWtCQyxXQUFsQixHQUNKQyxJQURJLENBRUhDLFFBQVEsSUFDTlgsZ0JBQWdCLENBQ2JNLGVBREgsQ0FDbUI7QUFDZk0sSUFBQUEsUUFBUSxFQUFFYixJQUFJLENBQUNjLEtBQUwsQ0FBV0MsU0FBWCxDQUFxQlosY0FBYyxDQUFDRCxZQUFELENBQWQsQ0FBNkJXLFFBQWxELENBREs7QUFFZkcsSUFBQUEsT0FBTyxFQUFFWCxTQUFTLENBQUNXO0FBRkosR0FEbkIsRUFNSTtBQUNFQyxJQUFBQSxJQUFJLEVBQUVMLFFBQVEsQ0FBQyxDQUFELENBRGhCO0FBRUVNLElBQUFBLEdBQUcsRUFBRTtBQUZQLEdBTkosRUFXR1AsSUFYSCxDQVlLUSxPQUFELElBQWE7QUFDVHJCLElBQUFBLEtBQUssQ0FBRSxHQUFFSyxjQUFjLENBQUNELFlBQUQsQ0FBZCxDQUE2QmtCLFFBQVMsc0RBQTFDLENBQUw7QUFDQXRCLElBQUFBLEtBQUssQ0FBQyxzRUFBRCxDQUFMOztBQUNBLFFBQUlJLFlBQVksR0FBRyxDQUFmLEdBQW1CQyxjQUFjLENBQUNrQixNQUF0QyxFQUE4QztBQUMxQyxhQUFPZCxlQUFlLENBQ3BCUCxJQURvQixFQUVwQkMsZ0JBRm9CLEVBR3BCQyxZQUFZLEdBQUcsQ0FISyxFQUlwQkMsY0FKb0IsRUFLcEJDLGVBTG9CLEVBTXBCRSxTQU5vQixDQUF0QjtBQU9ILEtBUkQsTUFRTztBQUNIUixNQUFBQSxLQUFLLENBQUMsc0VBQUQsQ0FBTDtBQUNBQSxNQUFBQSxLQUFLLENBQUMsZ0VBQUQsQ0FBTDtBQUNBLGFBQU8sc0NBQ0xFLElBREssRUFFTEMsZ0JBRkssRUFHTCxDQUhLLEVBSUxFLGNBSkssRUFLTEMsZUFMSyxFQU1MRSxTQU5LLENBQVA7QUFRSDtBQUNKLEdBbkNMLENBSEMsQ0FBUDtBQXdDRCxDQWxERDs7ZUFvRGVQLDJCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IF9kZWJ1ZyBmcm9tICdkZWJ1ZydcbmltcG9ydCBjcmVhdGVXb3JrbGlzdEluc3RhbmNlcyBmcm9tICcuL2NyZWF0ZS13b3JrbGlzdC1pbnN0YW5jZXMnXG5cbmNvbnN0IGRlYnVnID0gX2RlYnVnKCdjYXRlcnBpbGxhcnFsOm1vZGVsOmNvbnRpbnVlLWZhY3RvcnktcmVnaXN0cmF0aW9uJylcblxuY29uc3QgY29udGludWVGYWN0b3J5UmVnaXN0cmF0aW9uID0gKFxuICB3ZWIzLFxuICByZWdpc3RyeUNvbnRyYWN0OiBpbXBvcnQoJ2NhdGVycGlsbGFyLWxpYicpLlJlZ2lzdHJ5Q29udHJhY3QsXG4gIGN1cnJlbnRJbmRleCxcbiAgc29ydGVkRWxlbWVudHMsXG4gIG91dHB1dENvbnRyYWN0cyxcbiAgY29udHJhY3RGLFxuICBtb2RlbEluZm8sXG4gIHJlZ2lzdGVyRmFjdG9yeSxcbikgPT4ge1xuICByZXR1cm4gd2ViMy5ldGgucGVyc29uYWwuZ2V0QWNjb3VudHMoKVxuICAgIC50aGVuKFxuICAgICAgYWNjb3VudHMgPT5cbiAgICAgICAgcmVnaXN0cnlDb250cmFjdFxuICAgICAgICAgIC5yZWdpc3RlckZhY3Rvcnkoe1xuICAgICAgICAgICAgYnVuZGxlSWQ6IHdlYjMudXRpbHMuZnJvbUFzY2lpKHNvcnRlZEVsZW1lbnRzW2N1cnJlbnRJbmRleF0uYnVuZGxlSWQpLFxuICAgICAgICAgICAgYWRkcmVzczogY29udHJhY3RGLmFkZHJlc3MsXG4gICAgICAgICAgfSlcbiAgICAgICAgICAoXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIGZyb206IGFjY291bnRzWzBdLFxuICAgICAgICAgICAgICBnYXM6IDQ3MDAwMDBcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgKVxuICAgICAgICAgIC50aGVuKFxuICAgICAgICAgICAgKHJlc3VsdDEpID0+IHtcbiAgICAgICAgICAgICAgICBkZWJ1ZyhgJHtzb3J0ZWRFbGVtZW50c1tjdXJyZW50SW5kZXhdLm5vZGVOYW1lfV9GYWN0b3J5IHJlZ2lzdGVyZWQgU1VDQ0VTU0ZVTExZIGluIFByb2Nlc3MgUmVnaXN0cnlgKTtcbiAgICAgICAgICAgICAgICBkZWJ1ZygnLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4nKTtcbiAgICAgICAgICAgICAgICBpZiAoY3VycmVudEluZGV4ICsgMSA8IHNvcnRlZEVsZW1lbnRzLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVnaXN0ZXJGYWN0b3J5KFxuICAgICAgICAgICAgICAgICAgICAgIHdlYjMsXG4gICAgICAgICAgICAgICAgICAgICAgcmVnaXN0cnlDb250cmFjdCxcbiAgICAgICAgICAgICAgICAgICAgICBjdXJyZW50SW5kZXggKyAxLFxuICAgICAgICAgICAgICAgICAgICAgIHNvcnRlZEVsZW1lbnRzLFxuICAgICAgICAgICAgICAgICAgICAgIG91dHB1dENvbnRyYWN0cyxcbiAgICAgICAgICAgICAgICAgICAgICBtb2RlbEluZm8pXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgZGVidWcoJy4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uJyk7XG4gICAgICAgICAgICAgICAgICAgIGRlYnVnKCdERVBMT1lPTkcgd29ya2xpc3QgQ09OVFJBQ1RTIEFORCBVUERBVElORyBQUk9DRVNTIFJFR0lTVFJZIC4uLicpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlV29ya2xpc3RJbnN0YW5jZXMoXG4gICAgICAgICAgICAgICAgICAgICAgd2ViMyxcbiAgICAgICAgICAgICAgICAgICAgICByZWdpc3RyeUNvbnRyYWN0LFxuICAgICAgICAgICAgICAgICAgICAgIDAsXG4gICAgICAgICAgICAgICAgICAgICAgc29ydGVkRWxlbWVudHMsXG4gICAgICAgICAgICAgICAgICAgICAgb3V0cHV0Q29udHJhY3RzLFxuICAgICAgICAgICAgICAgICAgICAgIG1vZGVsSW5mbyxcbiAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KVxuICAgICAgICApXG59O1xuXG5leHBvcnQgZGVmYXVsdCBjb250aW51ZUZhY3RvcnlSZWdpc3RyYXRpb25cbiJdfQ==