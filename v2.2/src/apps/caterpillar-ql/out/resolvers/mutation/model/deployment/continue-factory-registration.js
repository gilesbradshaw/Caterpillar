"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _debug2 = _interopRequireDefault(require("debug"));

var _createWorklistInstances = _interopRequireDefault(require("./create-worklist-instances"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const debug = (0, _debug2.default)('caterpillarql:model:continue-factory-registration');

const continueFactoryRegistration = (web3, registryContract, currentIndex, sortedElements, outputContracts, contractF, modelInfo, registerFactory) => {
  return web3.eth.personal.getAccounts().then(accounts => registryContract.methods.registerFactory(web3.utils.fromAscii(sortedElements[currentIndex].bundleId), contractF.address).send({
    from: accounts[0],
    gas: 4700000
  }).then(result1 => {
    debug(`${sortedElements[currentIndex].nodeName}_Factory registered SUCCESSFULLY in Process Registry`);
    debug('....................................................................');

    if (currentIndex + 1 < sortedElements.length) {
      return registerFactory(web3, registryContract, currentIndex + 1, sortedElements, outputContracts, modelInfo);
    } else {
      debug('....................................................................');
      debug('DEPLOYONG WORKLIST CONTRACTS AND UPDATING PROCESS REGISTRY ...');
      return (0, _createWorklistInstances.default)(web3, registryContract, 0, sortedElements, outputContracts, modelInfo);
    }
  }));
};

var _default = continueFactoryRegistration;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL2FwcC9yZXNvbHZlcnMvbXV0YXRpb24vbW9kZWwvZGVwbG95bWVudC9jb250aW51ZS1mYWN0b3J5LXJlZ2lzdHJhdGlvbi50cyJdLCJuYW1lcyI6WyJkZWJ1ZyIsImNvbnRpbnVlRmFjdG9yeVJlZ2lzdHJhdGlvbiIsIndlYjMiLCJyZWdpc3RyeUNvbnRyYWN0IiwiY3VycmVudEluZGV4Iiwic29ydGVkRWxlbWVudHMiLCJvdXRwdXRDb250cmFjdHMiLCJjb250cmFjdEYiLCJtb2RlbEluZm8iLCJyZWdpc3RlckZhY3RvcnkiLCJldGgiLCJwZXJzb25hbCIsImdldEFjY291bnRzIiwidGhlbiIsImFjY291bnRzIiwibWV0aG9kcyIsInV0aWxzIiwiZnJvbUFzY2lpIiwiYnVuZGxlSWQiLCJhZGRyZXNzIiwic2VuZCIsImZyb20iLCJnYXMiLCJyZXN1bHQxIiwibm9kZU5hbWUiLCJsZW5ndGgiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7OztBQUVBLE1BQU1BLEtBQUssR0FBRyxxQkFBTyxtREFBUCxDQUFkOztBQUVBLE1BQU1DLDJCQUEyQixHQUFHLENBQ2xDQyxJQURrQyxFQUVsQ0MsZ0JBRmtDLEVBR2xDQyxZQUhrQyxFQUlsQ0MsY0FKa0MsRUFLbENDLGVBTGtDLEVBTWxDQyxTQU5rQyxFQU9sQ0MsU0FQa0MsRUFRbENDLGVBUmtDLEtBUy9CO0FBQ0gsU0FBT1AsSUFBSSxDQUFDUSxHQUFMLENBQVNDLFFBQVQsQ0FBa0JDLFdBQWxCLEdBQ0pDLElBREksQ0FFSEMsUUFBUSxJQUNOWCxnQkFBZ0IsQ0FDYlksT0FESCxDQUVHTixlQUZILENBR0lQLElBQUksQ0FBQ2MsS0FBTCxDQUFXQyxTQUFYLENBQXFCWixjQUFjLENBQUNELFlBQUQsQ0FBZCxDQUE2QmMsUUFBbEQsQ0FISixFQUlJWCxTQUFTLENBQUNZLE9BSmQsRUFNR0MsSUFOSCxDQU9JO0FBQ0VDLElBQUFBLElBQUksRUFBRVAsUUFBUSxDQUFDLENBQUQsQ0FEaEI7QUFFRVEsSUFBQUEsR0FBRyxFQUFFO0FBRlAsR0FQSixFQVlHVCxJQVpILENBYUtVLE9BQUQsSUFBYTtBQUNUdkIsSUFBQUEsS0FBSyxDQUFFLEdBQUVLLGNBQWMsQ0FBQ0QsWUFBRCxDQUFkLENBQTZCb0IsUUFBUyxzREFBMUMsQ0FBTDtBQUNBeEIsSUFBQUEsS0FBSyxDQUFDLHNFQUFELENBQUw7O0FBQ0EsUUFBSUksWUFBWSxHQUFHLENBQWYsR0FBbUJDLGNBQWMsQ0FBQ29CLE1BQXRDLEVBQThDO0FBQzFDLGFBQU9oQixlQUFlLENBQ3BCUCxJQURvQixFQUVwQkMsZ0JBRm9CLEVBR3BCQyxZQUFZLEdBQUcsQ0FISyxFQUlwQkMsY0FKb0IsRUFLcEJDLGVBTG9CLEVBTXBCRSxTQU5vQixDQUF0QjtBQU9ILEtBUkQsTUFRTztBQUNIUixNQUFBQSxLQUFLLENBQUMsc0VBQUQsQ0FBTDtBQUNBQSxNQUFBQSxLQUFLLENBQUMsZ0VBQUQsQ0FBTDtBQUNBLGFBQU8sc0NBQ0xFLElBREssRUFFTEMsZ0JBRkssRUFHTCxDQUhLLEVBSUxFLGNBSkssRUFLTEMsZUFMSyxFQU1MRSxTQU5LLENBQVA7QUFRSDtBQUNKLEdBcENMLENBSEMsQ0FBUDtBQXlDRCxDQW5ERDs7ZUFxRGVQLDJCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IF9kZWJ1ZyBmcm9tICdkZWJ1ZydcbmltcG9ydCBjcmVhdGVXb3JrbGlzdEluc3RhbmNlcyBmcm9tICcuL2NyZWF0ZS13b3JrbGlzdC1pbnN0YW5jZXMnXG5cbmNvbnN0IGRlYnVnID0gX2RlYnVnKCdjYXRlcnBpbGxhcnFsOm1vZGVsOmNvbnRpbnVlLWZhY3RvcnktcmVnaXN0cmF0aW9uJylcblxuY29uc3QgY29udGludWVGYWN0b3J5UmVnaXN0cmF0aW9uID0gKFxuICB3ZWIzLFxuICByZWdpc3RyeUNvbnRyYWN0LFxuICBjdXJyZW50SW5kZXgsXG4gIHNvcnRlZEVsZW1lbnRzLFxuICBvdXRwdXRDb250cmFjdHMsXG4gIGNvbnRyYWN0RixcbiAgbW9kZWxJbmZvLFxuICByZWdpc3RlckZhY3RvcnksXG4pID0+IHtcbiAgcmV0dXJuIHdlYjMuZXRoLnBlcnNvbmFsLmdldEFjY291bnRzKClcbiAgICAudGhlbihcbiAgICAgIGFjY291bnRzID0+XG4gICAgICAgIHJlZ2lzdHJ5Q29udHJhY3RcbiAgICAgICAgICAubWV0aG9kc1xuICAgICAgICAgIC5yZWdpc3RlckZhY3RvcnkoXG4gICAgICAgICAgICB3ZWIzLnV0aWxzLmZyb21Bc2NpaShzb3J0ZWRFbGVtZW50c1tjdXJyZW50SW5kZXhdLmJ1bmRsZUlkKSxcbiAgICAgICAgICAgIGNvbnRyYWN0Ri5hZGRyZXNzLFxuICAgICAgICAgIClcbiAgICAgICAgICAuc2VuZChcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgZnJvbTogYWNjb3VudHNbMF0sXG4gICAgICAgICAgICAgIGdhczogNDcwMDAwMFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICApXG4gICAgICAgICAgLnRoZW4oXG4gICAgICAgICAgICAocmVzdWx0MSkgPT4ge1xuICAgICAgICAgICAgICAgIGRlYnVnKGAke3NvcnRlZEVsZW1lbnRzW2N1cnJlbnRJbmRleF0ubm9kZU5hbWV9X0ZhY3RvcnkgcmVnaXN0ZXJlZCBTVUNDRVNTRlVMTFkgaW4gUHJvY2VzcyBSZWdpc3RyeWApO1xuICAgICAgICAgICAgICAgIGRlYnVnKCcuLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLicpO1xuICAgICAgICAgICAgICAgIGlmIChjdXJyZW50SW5kZXggKyAxIDwgc29ydGVkRWxlbWVudHMubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiByZWdpc3RlckZhY3RvcnkoXG4gICAgICAgICAgICAgICAgICAgICAgd2ViMyxcbiAgICAgICAgICAgICAgICAgICAgICByZWdpc3RyeUNvbnRyYWN0LFxuICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbnRJbmRleCArIDEsXG4gICAgICAgICAgICAgICAgICAgICAgc29ydGVkRWxlbWVudHMsXG4gICAgICAgICAgICAgICAgICAgICAgb3V0cHV0Q29udHJhY3RzLFxuICAgICAgICAgICAgICAgICAgICAgIG1vZGVsSW5mbylcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBkZWJ1ZygnLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4nKTtcbiAgICAgICAgICAgICAgICAgICAgZGVidWcoJ0RFUExPWU9ORyBXT1JLTElTVCBDT05UUkFDVFMgQU5EIFVQREFUSU5HIFBST0NFU1MgUkVHSVNUUlkgLi4uJyk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVXb3JrbGlzdEluc3RhbmNlcyhcbiAgICAgICAgICAgICAgICAgICAgICB3ZWIzLFxuICAgICAgICAgICAgICAgICAgICAgIHJlZ2lzdHJ5Q29udHJhY3QsXG4gICAgICAgICAgICAgICAgICAgICAgMCxcbiAgICAgICAgICAgICAgICAgICAgICBzb3J0ZWRFbGVtZW50cyxcbiAgICAgICAgICAgICAgICAgICAgICBvdXRwdXRDb250cmFjdHMsXG4gICAgICAgICAgICAgICAgICAgICAgbW9kZWxJbmZvLFxuICAgICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pXG4gICAgICAgIClcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNvbnRpbnVlRmFjdG9yeVJlZ2lzdHJhdGlvblxuIl19